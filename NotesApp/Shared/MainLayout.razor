@inherits LayoutComponentBase
@inject Blazored.LocalStorage.ILocalStorageService LocalStorage

<PageTitle>Notes sharing</PageTitle>
<div class="min-h-full">
    <nav class="bg-gray-800">
        <div class="mx-auto max-w-7xl px-4 sm:px-6 lg:px-8">
            <div class="flex h-16 items-center justify-between">
                <div class="flex-shrink-0">
                    <img class="h-8 w-8" src="icons/icon.svg" alt="Notes sharing">
                </div>
                <div class="w-full content-center space-x-4 me-8">
                    <input type="text" placeholder="Enter search item" id="default-input" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500">
                </div>
                <button @onclick="@ChangeTheme" class="rounded-md bg-gray-700 px-5 py-5 border-2">
                    <svg height="20" width="20" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M12 18C8.68629 18 6 15.3137 6 12C6 8.68629 8.68629 6 12 6C15.3137 6 18 8.68629 18 12C18 15.3137 15.3137 18 12 18ZM12 16C14.2091 16 16 14.2091 16 12C16 9.79086 14.2091 8 12 8C9.79086 8 8 9.79086 8 12C8 14.2091 9.79086 16 12 16ZM11 1H13V4H11V1ZM11 20H13V23H11V20ZM3.51472 4.92893L4.92893 3.51472L7.05025 5.63604L5.63604 7.05025L3.51472 4.92893ZM16.9497 18.364L18.364 16.9497L20.4853 19.0711L19.0711 20.4853L16.9497 18.364ZM19.0711 3.51472L20.4853 4.92893L18.364 7.05025L16.9497 5.63604L19.0711 3.51472ZM5.63604 16.9497L7.05025 18.364L4.92893 20.4853L3.51472 19.0711L5.63604 16.9497ZM23 11V13H20V11H23ZM4 11V13H1V11H4Z" fill="rgba(250,218,6,1)"></path></svg>
                </button>
            </div>
        </div>
    </nav>
    <main class='@(toggleDark ? "dark" : null)'>
        <div class="mx-auto max-w-7xl py-6 sm:px-6 lg:px-8">
            @Body
        </div>
    </main>
</div>
@code {
    private bool toggleDark = false;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (!(await LocalStorage.ContainKeyAsync("theme")))
        {
            await LocalStorage.SetItemAsStringAsync("theme", "light");
        }
        else
        {
            string theme = await LocalStorage.GetItemAsStringAsync("theme");

            if (theme == "dark")
            {
                toggleDark = true;
            }
            else
            {
                toggleDark = false;
            }
        }
    }
    public async Task ChangeTheme()
    {
        toggleDark = !toggleDark;
        string theme = await LocalStorage.GetItemAsStringAsync("theme");

        if (theme == "dark")
        {
            await LocalStorage.SetItemAsStringAsync("theme", "light");
        }
        else
        {
            await LocalStorage.SetItemAsStringAsync("theme", "dark");
        }
    }
}